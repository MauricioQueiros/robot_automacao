<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210213 19:57:44.989" rpa="false">
<suite id="s1" name="Player" source="C:\rfw\parodify\tests\player.robot">
<test id="s1-t1" name="Reproduzir paródia Bug de Manhã">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210213 19:57:45.737" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210213 19:57:46.567" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210213 19:57:45.737" endtime="20210213 19:57:46.567"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210213 19:57:52.082" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210213 19:57:46.567" endtime="20210213 19:57:52.083"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:45.737" endtime="20210213 19:57:52.083"></status>
</kw>
<kw name="Login With" library="auth">
<arguments>
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_args}</arg>
</arguments>
<msg timestamp="20210213 19:57:52.083" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210213 19:57:52.083" endtime="20210213 19:57:52.126"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${pass_args}</arg>
</arguments>
<msg timestamp="20210213 19:57:52.127" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210213 19:57:52.127" endtime="20210213 19:57:52.142"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value='Log in']</arg>
</arguments>
<status status="PASS" starttime="20210213 19:57:52.142" endtime="20210213 19:57:52.913"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:52.083" endtime="20210213 19:57:52.914"></status>
</kw>
<kw name="Logout Link Should Be visible" library="auth">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${LOGOUT_LINK}</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 19:57:53.195" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210213 19:57:52.914" endtime="20210213 19:57:53.196"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:52.914" endtime="20210213 19:57:53.196"></status>
</kw>
<kw name="Go To Search Page" library="nav">
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=a[href*=search]</arg>
</arguments>
<status status="PASS" starttime="20210213 19:57:53.197" endtime="20210213 19:57:53.228"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Buscar")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 19:57:53.717" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Buscar")]</msg>
<status status="PASS" starttime="20210213 19:57:53.228" endtime="20210213 19:57:53.717"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:53.196" endtime="20210213 19:57:53.717"></status>
</kw>
<kw name="Go To Sertanejo Categorie" library="nav">
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//img[contains(@src, "sertanejo.png")]/..</arg>
</arguments>
<status status="PASS" starttime="20210213 19:57:53.718" endtime="20210213 19:57:54.229"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Sertanejo")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 19:57:54.616" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Sertanejo")]</msg>
<status status="PASS" starttime="20210213 19:57:54.229" endtime="20210213 19:57:54.617"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:53.718" endtime="20210213 19:57:54.617"></status>
</kw>
<kw name="Open Album From" library="nav">
<arguments>
<arg>Marcus e Debug</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//p[contains(text(), "${artist_name}")]/..</arg>
</arguments>
<status status="PASS" starttime="20210213 19:57:54.618" endtime="20210213 19:57:54.660"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Músicas")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 19:57:55.109" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Músicas")]</msg>
<status status="PASS" starttime="20210213 19:57:54.660" endtime="20210213 19:57:55.109"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:54.617" endtime="20210213 19:57:55.109"></status>
</kw>
<kw name="Play Song" library="song">
<arguments>
<arg>Bug de Manhã</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "${song_name}")]/../..//div[contains(@class, "play")]//a</arg>
</arguments>
<status status="PASS" starttime="20210213 19:57:55.110" endtime="20210213 19:57:55.142"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:55.110" endtime="20210213 19:57:55.142"></status>
</kw>
<kw name="Song Should Be Playing" library="song">
<arguments>
<arg>Bug de Manhã</arg>
</arguments>
<kw name="Get Style" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Gets the computed style properties of the element selected by ``selector``.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "${song_name}")]/../../..</arg>
<arg>color</arg>
<arg>equal</arg>
<arg>rgb(225, 0, 180)</arg>
</arguments>
<msg timestamp="20210213 19:57:55.156" level="INFO">Value of key: color</msg>
<msg timestamp="20210213 19:57:55.156" level="INFO">Value of selected property: rgb(225, 0, 180)</msg>
<status status="PASS" starttime="20210213 19:57:55.143" endtime="20210213 19:57:55.156"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:55.143" endtime="20210213 19:57:55.156"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210213 19:57:55.413" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-18.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-18.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210213 19:57:55.157" endtime="20210213 19:57:55.413"></status>
</kw>
<status status="PASS" starttime="20210213 19:57:45.737" endtime="20210213 19:57:55.413" critical="yes"></status>
</test>
<doc>Testando o player de paródias</doc>
<status status="PASS" starttime="20210213 19:57:44.989" endtime="20210213 19:57:55.462"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Player">Player</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
